@page "/"

@inject IOrariRepository orariRepository
@inject ILogger<Index> logger

<div class="container">
    @if (Orari is not null)
    {
        @foreach (var giorno in GiorniLezione)
        {

            <div class="all-card">
                <div class="card-date">
                    <span class="card-row"> <img src="/Icons/calendar.svg" /><label> @giorno.ToString("dddd, dd MMMM").FirstCharToUpper()</label></span>
                </div>
                <div class="card-body">
                    @foreach (var orari in Orari.Where(x => x.Day == giorno))
                    {
                        <div class="card-col">
                            <span class="card-row"><img src="Icons/book.svg" /> <label>@orari.Materia</label></span>
                            <span class="card-row">
                                <img src="Icons/clock.svg" /><label>@orari.Orario</label><img src="Icons/pin.svg" /><label class="rm-lmargin">@orari.Aula</label>
                            </span>
                            <span class="card-row"><img src="Icons/person.svg" /> <label>@orari.Professore</label></span>
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <Loading />
    }
</div>
@code {

    [Parameter]
    public List<Orari> Orari { get; set; }

    [Parameter]
    public List<DateTime> GiorniLezione { get; set; }

    protected override async Task OnInitializedAsync()
    {

        Orari = (await orariRepository.getOrari()).ToList();
        GiorniLezione = Orari.Select(x => x.Day).Distinct().ToList();



    }
}